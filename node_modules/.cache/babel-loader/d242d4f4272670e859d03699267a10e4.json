{"ast":null,"code":"var _jsxFileName = \"E:\\\\babes_portfolio(beta)\\\\src\\\\components\\\\reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport reviewdata from \"../utils/reviewdata\";\nimport Carousal from '../subcomponent/carousal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Reviews() {\n  _s();\n\n  const [stateindex, setstateindex] = useState(0);\n  const [imgsdata, setimg] = useState(reviewdata);\n  const [imgheight, setheight] = useState(); // checking height of the svg\n\n  const heightRef = useRef();\n\n  function checkheight() {\n    const Height = heightRef.current.clientHeight;\n    setheight(Height);\n  }\n\n  useEffect(() => {\n    checkheight();\n  }, [imgsdata]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", checkheight);\n  }, []);\n\n  const moveDot = index => {\n    setstateindex(index);\n  }; // autoscrolling functions\n\n\n  let slideInterval;\n  const dataLength = reviewdata.length;\n\n  const nextSlide = () => {\n    setstateindex(stateindex === dataLength - 1 ? 0 : stateindex + 1);\n  };\n\n  function auto() {\n    slideInterval = setInterval(nextSlide, 10000);\n  }\n\n  useEffect(() => {\n    auto();\n    return () => clearInterval(slideInterval);\n  }, [stateindex]); // the compotnent \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews_header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Dont just take my word for it !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviews_card_stack\",\n      style: {\n        height: imgheight + 3 + \"px\"\n      },\n      children: reviewdata.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === stateindex ? \"reviews_card active\" : \"reviews_card\",\n          children: index === stateindex && /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: heightRef,\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-dots\",\n      children: Array.from({\n        length: 3\n      }).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => moveDot(index),\n        className: stateindex === index ? \"dot active\" : \"dot\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"WNmShsUFjTtpSWF3rR+u+IsGr0E=\");\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["E:/babes_portfolio(beta)/src/components/reviews.jsx"],"names":["React","useState","useRef","useEffect","reviewdata","Carousal","Reviews","stateindex","setstateindex","imgsdata","setimg","imgheight","setheight","heightRef","checkheight","Height","current","clientHeight","window","addEventListener","moveDot","index","slideInterval","dataLength","length","nextSlide","auto","setInterval","clearInterval","height","map","data","Array","from","item"],"mappings":"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","sourcesContent":["import React, { useState,useRef,useEffect } from 'react';\r\nimport reviewdata from \"../utils/reviewdata\";\r\nimport Carousal from '../subcomponent/carousal';\r\n\r\n\r\nexport default function Reviews() {\r\n\r\nconst [stateindex,setstateindex]=useState(0);\r\nconst[imgsdata,setimg]=useState(reviewdata);\r\n  const[imgheight,setheight]=useState();\r\n\r\n// checking height of the svg\r\n\r\n\r\n  const heightRef = useRef();\r\n\r\n  function checkheight(){\r\n    const Height = heightRef.current.clientHeight;\r\n    setheight(Height)\r\n  }\r\n \r\n\r\nuseEffect(() => {\r\n  checkheight();\r\n\r\n  \r\n}, [imgsdata])\r\n\r\n\r\n\r\n\r\n useEffect(() => {\r\n \r\n window.addEventListener(\"resize\",checkheight);\r\n\r\n  \r\n }, [])\r\n\r\n \r\n const moveDot = index => {\r\n  setstateindex(index)\r\n}\r\n\r\n\r\n// autoscrolling functions\r\n\r\nlet slideInterval;\r\nconst dataLength=reviewdata.length;\r\nconst nextSlide = () => {\r\n  setstateindex(stateindex === dataLength - 1 ? 0 : stateindex + 1);\r\n};\r\n\r\nfunction auto() {\r\n  slideInterval = setInterval(nextSlide, 10000);\r\n}\r\n\r\nuseEffect(() => {\r\n \r\n    auto();\r\n \r\n    return () => clearInterval(slideInterval);\r\n}, [stateindex]);\r\n\r\n\r\n// the compotnent \r\n  return (\r\n    <div id='reviews'>\r\n        <div className=\"reviews_header\">\r\n<p>Dont just take my word for it !</p>\r\n        </div>\r\n<div className=\"reviews_card_stack\" style={{ height:imgheight + 3 + \"px\"}}>\r\n{reviewdata.map((data, index) => {\r\n        return (\r\n          <div\r\n            className={index === stateindex ? \"reviews_card active\" : \"reviews_card\"}\r\n            key={index}\r\n          >\r\n            {index === stateindex && (\r\n              <div ref={heightRef}>\r\n                {data} \r\n              \r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n</div>\r\n\r\n  <div className=\"container-dots\">\r\n                {Array.from({length: 3}).map((item, index) => (\r\n                    <div \r\n                    key={index}\r\n                    onClick={() => moveDot(index)}\r\n                    className={stateindex === index? \"dot active\" : \"dot\"}\r\n                    ></div>\r\n                ))}\r\n  </div>\r\n\r\n\r\n \r\n\r\n\r\n</div>\r\n    \r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}