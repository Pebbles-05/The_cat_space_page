{"ast":null,"code":"var _jsxFileName = \"E:\\\\babes_portfolio(beta)\\\\src\\\\components\\\\home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport Hero from './hero';\nimport Strip from './strip';\nimport Projects from './projects';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  //Hook to grab window size\n  const size = useWindowSize(); // Ref for parent div and scrolling div\n\n  const app = useRef();\n  const scrollContainer = useRef(); // Configs\n\n  const data = {\n    ease: 0.1,\n    current: 0,\n    previous: 0,\n    rounded: 0\n  }; // Run scrollrender once page is loaded.\n\n  useEffect(() => {\n    requestAnimationFrame(() => skewScrolling());\n  }, []); //set the height of the body.\n\n  useEffect(() => {\n    setBodyHeight();\n  }, [size.height]); //Set the height of the body to the height of the scrolling div\n\n  const setBodyHeight = () => {\n    document.body.style.height = `${scrollContainer.current.getBoundingClientRect().height}px`;\n  }; // Scrolling\n\n\n  const skewScrolling = () => {\n    //Set Current to the scroll position amount\n    data.current = window.scrollY; // Set Previous to the scroll previous position\n\n    data.previous += (data.current - data.previous) * data.ease; // Set rounded to\n\n    data.rounded = Math.round(data.previous * 100) / 100; // Difference between\n\n    const difference = data.current - data.rounded;\n    const acceleration = difference / size.width;\n    const velocity = +acceleration; //Assign skew and smooth scrolling to the scroll container\n\n    scrollContainer.current.style.transform = `translate3d(0, -${data.rounded}px, 0)`; //loop vai raf\n\n    requestAnimationFrame(() => skewScrolling());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: app,\n    id: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollContainer,\n      className: \"scroll\",\n      children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Strip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"K7pRcLGABC825bZGbmG9REN2WaE=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/babes_portfolio(beta)/src/components/home.jsx"],"names":["React","useEffect","useRef","useWindowSize","Hero","Strip","Projects","Home","size","app","scrollContainer","data","ease","current","previous","rounded","requestAnimationFrame","skewScrolling","setBodyHeight","height","document","body","style","getBoundingClientRect","window","scrollY","Math","round","difference","acceleration","width","velocity","transform"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE/B;AACA,QAAMC,IAAI,GAAGL,aAAa,EAA1B,CAH+B,CAK/B;;AACA,QAAMM,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAMQ,eAAe,GAAGR,MAAM,EAA9B,CAP+B,CAS/B;;AACA,QAAMS,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAE,GADK;AAEXC,IAAAA,OAAO,EAAE,CAFE;AAGXC,IAAAA,QAAQ,EAAE,CAHC;AAIXC,IAAAA,OAAO,EAAE;AAJE,GAAb,CAV+B,CAiB/B;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,qBAAqB,CAAC,MAAMC,aAAa,EAApB,CAArB;AACD,GAFQ,EAEN,EAFM,CAAT,CAlB+B,CAsB/B;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACV,IAAI,CAACW,MAAN,CAFM,CAAT,CAvB+B,CA2B/B;;AACA,QAAMD,aAAa,GAAG,MAAM;AAC1BE,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,MAApB,GAA8B,GAC5BT,eAAe,CAACG,OAAhB,CAAwBU,qBAAxB,GAAgDJ,MACjD,IAFD;AAGD,GAJD,CA5B+B,CAkC/B;;;AACA,QAAMF,aAAa,GAAG,MAAM;AAC1B;AACAN,IAAAA,IAAI,CAACE,OAAL,GAAeW,MAAM,CAACC,OAAtB,CAF0B,CAG1B;;AACAd,IAAAA,IAAI,CAACG,QAAL,IAAiB,CAACH,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,QAArB,IAAiCH,IAAI,CAACC,IAAvD,CAJ0B,CAK1B;;AACAD,IAAAA,IAAI,CAACI,OAAL,GAAeW,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACG,QAAL,GAAgB,GAA3B,IAAkC,GAAjD,CAN0B,CAQ1B;;AACA,UAAMc,UAAU,GAAGjB,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACI,OAAvC;AACA,UAAMc,YAAY,GAAGD,UAAU,GAAGpB,IAAI,CAACsB,KAAvC;AACA,UAAMC,QAAQ,GAAG,CAACF,YAAlB,CAX0B,CAa1B;;AACAnB,IAAAA,eAAe,CAACG,OAAhB,CAAwBS,KAAxB,CAA8BU,SAA9B,GAA2C,mBAAkBrB,IAAI,CAACI,OAAQ,QAA1E,CAd0B,CAgB1B;;AACAC,IAAAA,qBAAqB,CAAC,MAAMC,aAAa,EAApB,CAArB;AACD,GAlBD;;AAsBE,sBACE;AAAK,IAAA,GAAG,EAAER,GAAV;AAAe,IAAA,EAAE,EAAC,MAAlB;AAAA,2BAEE;AAAK,MAAA,GAAG,EAAEC,eAAV;AAA2B,MAAA,SAAS,EAAC,QAArC;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArEuBH,I;UAGXJ,a;;;KAHWI,I","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport Hero from './hero';\nimport Strip from './strip';\nimport Projects from './projects';\n\n\n\nexport default function Home() {\n\n//Hook to grab window size\nconst size = useWindowSize();\n\n// Ref for parent div and scrolling div\nconst app = useRef();\nconst scrollContainer = useRef();\n\n// Configs\nconst data = {\n  ease: 0.1,\n  current: 0,\n  previous: 0,\n  rounded: 0\n};\n\n// Run scrollrender once page is loaded.\nuseEffect(() => {\n  requestAnimationFrame(() => skewScrolling());\n}, []);\n\n//set the height of the body.\nuseEffect(() => {\n  setBodyHeight();\n}, [size.height]);\n\n//Set the height of the body to the height of the scrolling div\nconst setBodyHeight = () => {\n  document.body.style.height = `${\n    scrollContainer.current.getBoundingClientRect().height\n  }px`;\n};\n\n// Scrolling\nconst skewScrolling = () => {\n  //Set Current to the scroll position amount\n  data.current = window.scrollY;\n  // Set Previous to the scroll previous position\n  data.previous += (data.current - data.previous) * data.ease;\n  // Set rounded to\n  data.rounded = Math.round(data.previous * 100) / 100;\n\n  // Difference between\n  const difference = data.current - data.rounded;\n  const acceleration = difference / size.width;\n  const velocity = +acceleration;\n\n  //Assign skew and smooth scrolling to the scroll container\n  scrollContainer.current.style.transform = `translate3d(0, -${data.rounded}px, 0)`;\n\n  //loop vai raf\n  requestAnimationFrame(() => skewScrolling());\n};\n\n\n\n  return (\n    <div ref={app} id='home'>\n\n      <div ref={scrollContainer} className='scroll'>\n        <Hero />\n        <Strip />\n        <Projects />\n      </div>\n        \n    </div>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}